buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'

sourceCompatibility = 1.9
targetCompatibility = 1.9

repositories {
    mavenCentral()
}

dependencies {
    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.0.1'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.0.1',
            'org.junit.vintage:junit-vintage-engine:4.12.1',
            'org.junit.platform:junit-platform-launcher:1.0.1',
            'org.junit.platform:junit-platform-runner:1.0.1'
    )
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'
}

jar {

    manifest {
        attributes 'Main-Class': 'Main'
    }

    from {
        configurations.compile.collect {it.isDirectory() ? it : zipTree(it) }
    }
}

task analyse(type: JavaExec ){
    def  execArgs = ["-h"]

    if(project.hasProperty('ARGS')) {
        execArgs = ARGS.trim().split(' ')
    }

    args(execArgs)
    main      = 'Main'
    classpath = sourceSets.main.runtimeClasspath
}

jacoco {
    toolVersion = "0.8.0"
    reportsDir  = file("$buildDir/reports/jacoco")
    applyTo junitPlatformTest
}

junitPlatformTest {
    jacoco {
        append          = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir    = file("$buildDir/jacoco/classpathdumps")
    }
}
